<style>
    .container {
        /* box-sizing: border-box; */
        display: flex;
        flex-direction: column
    }
    .img {
        width: 750rpx;
        height: 350rpx
    }
</style>

<template>
    <view class="container">
        <view>
            <image src="/image/big.jpg" class="img">
        </view>
        <!-- <view style="overflow:auto">{{years}}</view> -->
        <!-- 滚动选择器 -->
        <view style="width:300rpx">
            <view style="margin-bottom:50rpx">{{year}}年{{month}}月{{day}}日</view>
            <picker-view indicator-style="height: 50px;" style="width: 100%; height: 100rpx;" value="{{value}}" bindchange="bindChange">
                <picker-view-column>
                    <view wx:for="{{years}}" style="line-height: 50px">{{item}}年</view>
                </picker-view-column>
                <picker-view-column>
                    <view wx:for="{{months}}" style="line-height: 50px">{{item}}月</view>
                </picker-view-column>
                <picker-view-column>
                    <view wx:for="{{days}}" style="line-height: 50px">{{item}}日</view>
                </picker-view-column>
            </picker-view>
        </view>
        <!-- <view wx:for="{{months}}">{{item}}</view> -->
        
    </view>
</template>

<script>
    import wepy from 'wepy'
    export default class Index extends wepy.page {
        // var years=[]
        config = {
            navigationBarTitleText: '订单'
        }
        components = {}
        data = {
            years: [],
            months: [],
            days: [],
            year: "1990",
            month: "1",
            day: "1"
        }
        computed = {}
        methods = {
            bindChange(e) {
                const val = e.detail.value
                console.info(val)
                this.year=this.data.years[val[0]]
                this.month= this.data.months[val[1]]
                this.day=this.data.days[val[2]]
                // this.setData({
                //     year: this.data.years[val[0]],
                //     month: this.data.months[val[1]],
                //     day: this.data.days[val[2]]
                // })
                // this.$apply()
            }
        }
        onLoad() {
            for (let i = 1990; i <= new Date().getFullYear(); i++) {
                this.years.push(i)
            }
            for (let i = 1; i <= 12; i++) {
                this.months.push(i)
            }
            for (let i = 1; i <= 31; i++) {
                this.days.push(i)
            }
        }
    }
</script>


